name: 'Deploy Full Stack to VM via SSH'

on:
  push:
    branches:
      - 'main'

jobs:
  deploy:
    name: 'Deploy Full Stack to VM'
    runs-on: ubuntu-latest

    steps:
      - name: 'Deploy Code, Build Images, and Restart Docker'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            # Exit immediately if a command exits with a non-zero status.
            set -e

            # Navigate to the project directory
            cd /home/is3yak3/deepfake-detection-ai

            echo "--- Starting full stack deployment ---"

            # 1. Update code from Git & Clean the directory
            # -----------------------------------------------
            # This must happen BEFORE creating the .env file.
            echo "1. Fetching latest code and cleaning working directory..."
            git fetch origin --prune
            git reset --hard "origin/${{ github.ref_name }}"
            # git clean removes untracked files from previous builds.
            # -f is for force, -d for directories, -x for ignored files.
            git clean -fdx
            echo "   Code updated to commit: $(git log -1 --oneline)"

            # 2. Securely create the .env file from GitHub Secrets
            # ----------------------------------------------------
            # This happens AFTER cleaning so the file is not deleted.
            echo "2. Creating production .env file..."
            cat <<EOF > .env
# Auto-generated by GitHub Actions workflow

# --- General & Backend Settings ---
FLASK_ENV=production
DF_UPLOAD_FOLDER=uploads
DF_MODEL_PATH=deepfake_detector_model.keras
CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}

# --- Frontend Build & Runtime Settings ---
NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

# --- Supabase Backend & JWT Settings ---
SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
SUPABASE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
SUPABASE_JWT_SECRET=${{ secrets.SUPABASE_JWT_SECRET }}
EOF
            echo "   .env file created successfully."

            # 3. Rebuild and restart services
            # -------------------------------
            echo "3. Rebuilding and restarting Docker services..."
            # --build: Forces a rebuild of any services with changed source code.
            # -d: Runs containers in detached (background) mode.
            docker compose up --build -d

            # 4. Clean up old resources (Optional but recommended)
            # ----------------------------------------------------
            echo "4. Pruning unused Docker images..."
            docker image prune -f

            echo "--- Deployment successful! ---"